package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_svg_02 extends SVGRenderer {

    public ic_svg_02(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 455.731f;
        final float scaleY = h / 455.731f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(0.0f, 0.0f);
        mPath.rLineTo(455.731f, 0f);
        mPath.rLineTo(0f, 455.731f);
        mPath.rLineTo(-455.731f, 0f);
        mPath.close();
        mPath.moveTo(0.0f, 0.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-14952639, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(68.494f, 387.41f);
        mPath.rLineTo(22.323f, -79.284f);
        mPath.rCubicTo(-14.355f, -24.387f, -21.913f, -52.134f, -21.913f, -80.638f);
        mPath.rCubicTo(0.0f, -87.765f, 71.402f, -159.167f, 159.167f, -159.167f);
        mPath.rCubicTo(87.765015f, 0.0f, 159.166f, 71.402f, 159.166f, 159.167f);
        mPath.rCubicTo(0.0f, 87.765f, -71.401f, 159.167f, -159.166f, 159.167f);
        mPath.rCubicTo(-27.347f, 0.0f, -54.125f, -7.0f, -77.814f, -20.292f);
        mPath.lineTo(68.494f, 387.41f);
        mPath.close();
        mPath.moveTo(68.494f, 387.41f);
        mPath.moveTo(154.437f, 337.406f);
        mPath.rLineTo(4.872f, 2.975f);
        mPath.rCubicTo(20.654f, 12.609f, 44.432f, 19.274f, 68.762f, 19.274f);
        mPath.rCubicTo(72.877f, 0.0f, 132.166f, -59.29f, 132.166f, -132.167f);
        mPath.cubicTo(360.237f, 154.611f, 300.948f, 95.321f, 228.071f, 95.321f);
        mPath.cubicTo(155.194f, 95.321f, 95.904f, 154.611f, 95.904f, 227.488f);
        mPath.rCubicTo(0.0f, 25.393f, 7.217f, 50.052f, 20.869f, 71.311f);
        mPath.rLineTo(3.281f, 5.109f);
        mPath.rLineTo(-12.855f, 45.658f);
        mPath.lineTo(154.437f, 337.406f);
        mPath.close();
        mPath.moveTo(154.437f, 337.406f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(183.359f, 153.407f);
        mPath.rLineTo(-10.328f, -0.563f);
        mPath.rCubicTo(-3.244f, -0.177f, -6.426f, 0.907f, -8.878f, 3.037f);
        mPath.rCubicTo(-5.007f, 4.348f, -13.013f, 12.754f, -15.472f, 23.708f);
        mPath.rCubicTo(-3.667f, 16.333f, 2.0f, 36.333f, 16.667f, 56.333f);
        mPath.rCubicTo(14.667f, 20.0f, 42.0f, 52.0f, 90.333f, 65.667f);
        mPath.rCubicTo(15.575f, 4.404f, 27.827f, 1.435f, 37.28f, -4.612f);
        mPath.rCubicTo(7.487f, -4.789f, 12.648f, -12.476f, 14.508f, -21.166f);
        mPath.rLineTo(1.649f, -7.702f);
        mPath.rCubicTo(0.524f, -2.448f, -0.719f, -4.932f, -2.993f, -5.98f);
        mPath.rLineTo(-34.905f, -16.089f);
        mPath.rCubicTo(-2.266f, -1.044f, -4.953f, -0.384f, -6.477f, 1.591f);
        mPath.rLineTo(-13.703f, 17.764f);
        mPath.rCubicTo(-1.035f, 1.342f, -2.807f, 1.874f, -4.407f, 1.312f);
        mPath.rCubicTo(-9.384f, -3.298f, -40.818f, -16.463f, -58.066f, -49.687f);
        mPath.rCubicTo(-0.748f, -1.441f, -0.562f, -3.19f, 0.499f, -4.419f);
        mPath.rLineTo(13.096f, -15.15f);
        mPath.rCubicTo(1.338f, -1.547f, 1.676f, -3.722f, 0.872f, -5.602f);
        mPath.rLineTo(-15.046f, -35.201f);
        mPath.cubicTo(187.187f, 154.774f, 185.392f, 153.518f, 183.359f, 153.407f);
        mPath.close();
        mPath.moveTo(183.359f, 153.407f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}