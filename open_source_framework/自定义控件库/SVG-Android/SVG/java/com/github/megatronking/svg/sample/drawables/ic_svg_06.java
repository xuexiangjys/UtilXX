package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_svg_06 extends SVGRenderer {

    public ic_svg_06(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 455.731f;
        final float scaleY = h / 455.731f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(0.0f, 0.0f);
        mPath.rLineTo(455.731f, 0f);
        mPath.rLineTo(0f, 455.731f);
        mPath.rLineTo(-455.731f, 0f);
        mPath.close();
        mPath.moveTo(0.0f, 0.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-3341568, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(240.894f, 357.724f);
        mPath.rLineTo(-18.027f, 0f);
        mPath.rCubicTo(-58.383f, 0.0f, -105.882f, -47.499f, -105.882f, -105.882f);
        mPath.lineTo(116.985f, 119.884f);
        mPath.rCubicTo(0.0f, -12.082f, 9.795f, -21.877f, 21.877f, -21.877f);
        mPath.rCubicTo(12.082f, 0.0f, 21.877f, 9.795f, 21.877f, 21.877f);
        mPath.rLineTo(0f, 131.958f);
        mPath.rCubicTo(0.0f, 34.257f, 27.871f, 62.127f, 62.127f, 62.127f);
        mPath.rLineTo(18.027f, 0f);
        mPath.rCubicTo(34.257f, 0.0f, 62.127f, -27.871f, 62.127f, -62.127f);
        mPath.rCubicTo(0.0f, -34.258f, -27.87f, -62.128f, -62.127f, -62.128f);
        mPath.rLineTo(-12.776f, 0f);
        mPath.rCubicTo(-12.082f, 0.0f, -21.877f, -9.794f, -21.877f, -21.877f);
        mPath.rCubicTo(0.0f, -12.082993f, 9.795f, -21.877f, 21.877f, -21.877f);
        mPath.rLineTo(12.776f, 0f);
        mPath.rCubicTo(58.383f, 0.0f, 105.882f, 47.499f, 105.882f, 105.883f);
        mPath.cubicTo(346.776f, 310.225f, 299.277f, 357.724f, 240.894f, 357.724f);
        mPath.close();
        mPath.moveTo(240.894f, 357.724f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}