package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_svg_12 extends SVGRenderer {

    public ic_svg_12(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 512.0f;
        final float scaleY = h / 512.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(411.814f, 32.962f);
        mPath.rLineTo(0f, 446.077f);
        mPath.rCubicTo(0.0f, 12.803f, -7.29f, 23.881f, -17.94f, 29.342f);
        mPath.rCubicTo(-4.501f, 2.322f, -9.612f, 3.619f, -15.021f, 3.619f);
        mPath.rLineTo(-245.7f, 0f);
        mPath.rCubicTo(-18.2f, 0.0f, -32.962f, -14.749f, -32.962f, -32.962f);
        mPath.lineTo(100.190994f, 32.962f);
        mPath.rCubicTo(0.0f, -18.2f, 14.762f, -32.962f, 32.962f, -32.962f);
        mPath.rLineTo(245.7f, 0f);
        mPath.rCubicTo(3.606f, 0.0f, 7.083f, 0.584f, 10.326f, 1.66f);
        mPath.cubicTo(402.319f, 5.98f, 411.814f, 18.368f, 411.814f, 32.962f);
        mPath.close();
        mPath.moveTo(411.814f, 32.962f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-8355712, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(411.816f, 32.962f);
        mPath.rLineTo(0f, 53.678f);
        mPath.lineTo(100.192f, 86.64f);
        mPath.lineTo(100.192f, 32.962f);
        mPath.rCubicTo(0.0f, -18.2f, 14.762f, -32.962f, 32.962f, -32.962f);
        mPath.rLineTo(245.7f, 0f);
        mPath.cubicTo(397.054f, 0.0f, 411.816f, 14.762f, 411.816f, 32.962f);
        mPath.close();
        mPath.moveTo(411.816f, 32.962f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1644826, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(411.816f, 426.347f);
        mPath.rLineTo(0f, 52.692f);
        mPath.rCubicTo(0.0f, 18.213f, -14.762f, 32.962f, -32.962f, 32.962f);
        mPath.rLineTo(-245.7f, 0f);
        mPath.rCubicTo(-18.2f, 0.0f, -32.962f, -14.749f, -32.962f, -32.962f);
        mPath.rLineTo(0f, -52.692f);
        mPath.lineTo(411.816f, 426.347f);
        mPath.close();
        mPath.moveTo(411.816f, 426.347f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1644826, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(337.421f, 343.405f);
        mPath.rLineTo(-81.41199f, -36.737f);
        mPath.rLineTo(-21.858002f, 9.859009f);
        mPath.rLineTo(-59.565994f, 26.87799f);
        mPath.rLineTo(81.423996f, -174.797f);
        mPath.rLineTo(24.776001f, 53.211f);
        mPath.close();
        mPath.moveTo(337.421f, 343.405f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-437208, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(337.421f, 343.405f);
        mPath.rLineTo(-81.41199f, -36.737f);
        mPath.rLineTo(0.0f, -138.06f);
        mPath.rLineTo(24.776001f, 53.211f);
        mPath.close();
        mPath.moveTo(337.421f, 343.405f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1751256, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(291.182f, 52.51f);
        mPath.rLineTo(-70.357f, 0f);
        mPath.rCubicTo(-4.298f, 0.0f, -7.783f, -3.486f, -7.783f, -7.783f);
        mPath.rCubicTo(0.0f, -4.297001f, 3.486f, -7.783f, 7.783f, -7.783f);
        mPath.rLineTo(70.357f, 0f);
        mPath.rCubicTo(4.298f, 0.0f, 7.783f, 3.486f, 7.783f, 7.783f);
        mPath.cubicTo(298.965f, 49.024f, 295.481f, 52.51f, 291.182f, 52.51f);
        mPath.close();
        mPath.moveTo(291.182f, 52.51f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-6710887, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(263.943f, 483.07f);
        mPath.rLineTo(-15.878f, 0f);
        mPath.rCubicTo(-7.164f, 0.0f, -12.972f, -5.807f, -12.972f, -12.972f);
        mPath.rCubicTo(0.0f, -7.164978f, 5.808f, -12.972f, 12.972f, -12.972f);
        mPath.rLineTo(15.878f, 0f);
        mPath.rCubicTo(7.164f, 0.0f, 12.972f, 5.807f, 12.972f, 12.972f);
        mPath.cubicTo(276.91498f, 477.263f, 271.107f, 483.07f, 263.943f, 483.07f);
        mPath.close();
        mPath.moveTo(263.943f, 483.07f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-6710887, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(411.814f, 86.639f);
        mPath.rLineTo(0.0f, 339.70798f);
        mPath.rLineTo(-231.72899f, 0.0f);
        mPath.rLineTo(167.25899f, -339.70798f);
        mPath.close();
        mPath.moveTo(411.814f, 86.639f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-6710887, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(337.421f, 343.405f);
        mPath.rLineTo(-81.41199f, -36.737f);
        mPath.rLineTo(-21.858002f, 9.859009f);
        mPath.rLineTo(46.634003f, -94.70801f);
        mPath.close();
        mPath.moveTo(337.421f, 343.405f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-429990, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(337.421f, 343.405f);
        mPath.rLineTo(-81.41199f, -36.737f);
        mPath.rLineTo(0.0f, -34.531006f);
        mPath.rLineTo(24.776001f, -50.317993f);
        mPath.close();
        mPath.moveTo(337.421f, 343.405f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-565439, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(100.184f, 418.564f);
        mPath.rLineTo(311.623f, 0f);
        mPath.rLineTo(0f, 15.566f);
        mPath.rLineTo(-311.623f, 0f);
        mPath.close();
        mPath.moveTo(100.184f, 418.564f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-11711155, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(100.184f, 78.856f);
        mPath.rLineTo(311.623f, 0f);
        mPath.rLineTo(0f, 15.566f);
        mPath.rLineTo(-311.623f, 0f);
        mPath.close();
        mPath.moveTo(100.184f, 78.856f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-11711155, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}