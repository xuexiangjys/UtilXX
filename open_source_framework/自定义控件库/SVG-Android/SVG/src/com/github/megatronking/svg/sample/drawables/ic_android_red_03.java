package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_android_red_03 extends SVGRenderer {

    public ic_android_red_03(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 24.0f;
        final float scaleY = h / 24.0f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{0.809017f, -0.58778524f, 9.345219f, 0.58778524f, 0.809017f, -4.761627f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(6.0f, 18.0f);
        mPath.rCubicTo(0.0f, 0.55f, 0.45f, 1.0f, 1.0f, 1.0f);
        mPath.rLineTo(1.0f, 0f);
        mPath.rLineTo(0f, 3.5f);
        mPath.rCubicTo(0.0f, 0.83f, 0.67f, 1.5f, 1.5f, 1.5f);
        mPath.rCubicTo(0.8299999f, 0.0f, 1.5f, -0.67f, 1.5f, -1.5f);
        mPath.lineTo(11.0f, 19.0f);
        mPath.rLineTo(2.0f, 0f);
        mPath.rLineTo(0f, 3.5f);
        mPath.rCubicTo(0.0f, 0.83f, 0.67f, 1.5f, 1.5f, 1.5f);
        mPath.rCubicTo(0.8299999f, 0.0f, 1.5f, -0.67f, 1.5f, -1.5f);
        mPath.lineTo(16.0f, 19.0f);
        mPath.rLineTo(1.0f, 0f);
        mPath.rCubicTo(0.55f, 0.0f, 1.0f, -0.45f, 1.0f, -1.0f);
        mPath.lineTo(18.0f, 8.0f);
        mPath.lineTo(6.0f, 8.0f);
        mPath.rLineTo(0f, 10.0f);
        mPath.close();
        mPath.moveTo(6.0f, 18.0f);
        mPath.moveTo(3.5f, 8.0f);
        mPath.cubicTo(2.67f, 8.0f, 2.0f, 8.67f, 2.0f, 9.5f);
        mPath.rLineTo(0f, 7.0f);
        mPath.rCubicTo(0.0f, 0.83f, 0.67f, 1.5f, 1.5f, 1.5f);
        mPath.cubicTo(4.33f, 18.0f, 5.0f, 17.33f, 5.0f, 16.5f);
        mPath.rLineTo(0f, -7.0f);
        mPath.cubicTo(5.0f, 8.67f, 4.33f, 8.0f, 3.5f, 8.0f);
        mPath.close();
        mPath.moveTo(3.5f, 8.0f);
        mPath.moveTo(20.5f, 8.0f);
        mPath.rCubicTo(-0.83f, 0.0f, -1.5f, 0.67f, -1.5f, 1.5f);
        mPath.rLineTo(0f, 7.0f);
        mPath.rCubicTo(0.0f, 0.83f, 0.67f, 1.5f, 1.5f, 1.5f);
        mPath.rCubicTo(0.8299999f, 0.0f, 1.5f, -0.67f, 1.5f, -1.5f);
        mPath.rLineTo(0f, -7.0f);
        mPath.rCubicTo(0.0f, -0.83f, -0.67f, -1.5f, -1.5f, -1.5f);
        mPath.close();
        mPath.moveTo(20.5f, 8.0f);
        mPath.moveTo(15.53f, 2.16f);
        mPath.rLineTo(1.3f, -1.3f);
        mPath.rCubicTo(0.2f, -0.2f, 0.2f, -0.51f, 0.0f, -0.71f);
        mPath.rCubicTo(-0.2f, -0.2f, -0.51f, -0.2f, -0.71f, 0.0f);
        mPath.rLineTo(-1.48f, 1.48f);
        mPath.cubicTo(13.85f, 1.23f, 12.95f, 1.0f, 12.0f, 1.0f);
        mPath.rCubicTo(-0.96f, 0.0f, -1.86f, 0.23f, -2.66f, 0.63f);
        mPath.lineTo(7.85f, 0.15f);
        mPath.rCubicTo(-0.2f, -0.2f, -0.51f, -0.2f, -0.71f, 0.0f);
        mPath.rCubicTo(-0.2f, 0.2f, -0.2f, 0.51f, 0.0f, 0.71f);
        mPath.rLineTo(1.31f, 1.31f);
        mPath.cubicTo(6.97f, 3.26f, 6.0f, 5.01f, 6.0f, 7.0f);
        mPath.rLineTo(12.0f, 0f);
        mPath.rCubicTo(0.0f, -1.99f, -0.97f, -3.75f, -2.47f, -4.84f);
        mPath.close();
        mPath.moveTo(15.53f, 2.16f);
        mPath.moveTo(10.0f, 5.0f);
        mPath.lineTo(9.0f, 5.0f);
        mPath.lineTo(9.0f, 4.0f);
        mPath.rLineTo(1.0f, 0f);
        mPath.rLineTo(0f, 1.0f);
        mPath.close();
        mPath.moveTo(10.0f, 5.0f);
        mPath.moveTo(15.0f, 5.0f);
        mPath.rLineTo(-1.0f, 0f);
        mPath.lineTo(14.0f, 4.0f);
        mPath.rLineTo(1.0f, 0f);
        mPath.rLineTo(0f, 1.0f);
        mPath.close();
        mPath.moveTo(15.0f, 5.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-65536, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}