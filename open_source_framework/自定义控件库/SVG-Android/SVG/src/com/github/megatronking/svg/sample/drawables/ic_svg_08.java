package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_svg_08 extends SVGRenderer {

    public ic_svg_08(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 455.731f;
        final float scaleY = h / 455.731f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(0.0f, 0.0f);
        mPath.rLineTo(455.731f, 0f);
        mPath.rLineTo(0f, 455.731f);
        mPath.rLineTo(-455.731f, 0f);
        mPath.close();
        mPath.moveTo(0.0f, 0.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-16743247, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(107.255f, 69.215f);
        mPath.rCubicTo(20.873f, 0.017f, 38.088f, 17.257f, 38.043f, 38.234f);
        mPath.rCubicTo(-0.05f, 21.965f, -18.278f, 38.52f, -38.3f, 38.043f);
        mPath.rCubicTo(-20.308f, 0.411f, -38.155f, -16.551f, -38.151f, -38.188f);
        mPath.cubicTo(68.847f, 86.319f, 86.129f, 69.199f, 107.255f, 69.215f);
        mPath.close();
        mPath.moveTo(107.255f, 69.215f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(129.431f, 386.471f);
        mPath.lineTo(84.71f, 386.471f);
        mPath.rCubicTo(-5.804f, 0.0f, -10.509f, -4.705f, -10.509f, -10.509f);
        mPath.lineTo(74.201f, 185.18f);
        mPath.rCubicTo(0.0f, -5.804f, 4.705f, -10.509f, 10.509f, -10.509f);
        mPath.rLineTo(44.721f, 0f);
        mPath.rCubicTo(5.804f, 0.0f, 10.509f, 4.705f, 10.509f, 10.509f);
        mPath.rLineTo(0f, 190.783f);
        mPath.cubicTo(139.939f, 381.766f, 135.235f, 386.471f, 129.431f, 386.471f);
        mPath.close();
        mPath.moveTo(129.431f, 386.471f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(386.884f, 241.682f);
        mPath.rCubicTo(0.0f, -39.996f, -32.423f, -72.42f, -72.42f, -72.42f);
        mPath.rLineTo(-11.47f, 0f);
        mPath.rCubicTo(-21.882f, 0.0f, -41.214f, 10.918f, -52.842f, 27.606f);
        mPath.rCubicTo(-1.268f, 1.819f, -2.442f, 3.708f, -3.52f, 5.658f);
        mPath.rCubicTo(-0.373f, -0.056f, -0.594f, -0.085f, -0.599f, -0.075f);
        mPath.rLineTo(0f, -23.418f);
        mPath.rCubicTo(0.0f, -2.409f, -1.953f, -4.363f, -4.363f, -4.363f);
        mPath.rLineTo(-55.795f, 0f);
        mPath.rCubicTo(-2.409f, 0.0f, -4.363f, 1.953f, -4.363f, 4.363f);
        mPath.lineTo(181.51198f, 382.11f);
        mPath.rCubicTo(0.0f, 2.409f, 1.952f, 4.362f, 4.361f, 4.363f);
        mPath.rLineTo(57.011f, 0.014f);
        mPath.rCubicTo(2.41f, 0.001f, 4.364f, -1.953f, 4.364f, -4.363f);
        mPath.lineTo(247.24799f, 264.801f);
        mPath.rCubicTo(0.0f, -20.28f, 16.175f, -37.119f, 36.454f, -37.348f);
        mPath.rCubicTo(10.352f, -0.117f, 19.737f, 4.031f, 26.501f, 10.799f);
        mPath.rCubicTo(6.675f, 6.671f, 10.802f, 15.895f, 10.802f, 26.079f);
        mPath.rLineTo(0f, 117.808f);
        mPath.rCubicTo(0.0f, 2.409f, 1.953f, 4.362f, 4.361f, 4.363f);
        mPath.rLineTo(57.152f, 0.014f);
        mPath.rCubicTo(2.41f, 0.001f, 4.364f, -1.953f, 4.364f, -4.363f);
        mPath.lineTo(386.88202f, 241.682f);
        mPath.close();
        mPath.moveTo(386.884f, 241.682f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}