package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_svg_04 extends SVGRenderer {

    public ic_svg_04(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 455.731f;
        final float scaleY = h / 455.731f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(0.0f, 0.0f);
        mPath.rLineTo(455.731f, 0f);
        mPath.rLineTo(0f, 455.731f);
        mPath.rLineTo(-455.731f, 0f);
        mPath.close();
        mPath.moveTo(0.0f, 0.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-11490319, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(60.377f, 337.822f);
        mPath.rCubicTo(30.33f, 19.236f, 66.308f, 30.368f, 104.875f, 30.368f);
        mPath.rCubicTo(108.349f, 0.0f, 196.18f, -87.841f, 196.18f, -196.18f);
        mPath.rCubicTo(0.0f, -2.705f, -0.057f, -5.39f, -0.161f, -8.067f);
        mPath.rCubicTo(3.919f, -3.084f, 28.157f, -22.511f, 34.098f, -35.0f);
        mPath.rCubicTo(0.0f, 0.0f, -19.683f, 8.18f, -38.947f, 10.107f);
        mPath.rCubicTo(-0.038f, 0.0f, -0.085f, 0.009f, -0.123f, 0.009f);
        mPath.rCubicTo(0.0f, 0.0f, 0.038f, -0.019f, 0.104f, -0.066f);
        mPath.rCubicTo(1.775f, -1.186f, 26.591f, -18.079f, 29.951f, -38.207f);
        mPath.rCubicTo(0.0f, 0.0f, -13.922f, 7.431f, -33.415f, 13.932f);
        mPath.rCubicTo(-3.227f, 1.072f, -6.605f, 2.126f, -10.088f, 3.103f);
        mPath.rCubicTo(-12.565f, -13.41f, -30.425f, -21.78f, -50.25f, -21.78f);
        mPath.rCubicTo(-38.027f, 0.0f, -68.841f, 30.805f, -68.841f, 68.803f);
        mPath.rCubicTo(0.0f, 5.362f, 0.617f, 10.581f, 1.784f, 15.592f);
        mPath.rCubicTo(-5.314f, -0.218f, -86.237f, -4.755f, -141.289f, -71.423f);
        mPath.rCubicTo(0.0f, 0.0f, -32.902f, 44.917f, 19.607f, 91.105f);
        mPath.rCubicTo(0.0f, 0.0f, -15.962f, -0.636f, -29.733f, -8.864f);
        mPath.rCubicTo(0.0f, 0.0f, -5.058f, 54.416f, 54.407f, 68.329f);
        mPath.rCubicTo(0.0f, 0.0f, -11.701f, 4.432f, -30.368f, 1.272f);
        mPath.rCubicTo(0.0f, 0.0f, 10.439f, 43.968f, 63.271f, 48.077f);
        mPath.rCubicTo(0.0f, 0.0f, -41.777f, 37.74f, -101.081f, 28.885f);
        mPath.lineTo(60.377f, 337.822f);
        mPath.close();
        mPath.moveTo(60.377f, 337.822f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}