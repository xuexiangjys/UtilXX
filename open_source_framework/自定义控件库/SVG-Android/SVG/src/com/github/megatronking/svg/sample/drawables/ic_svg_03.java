package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_svg_03 extends SVGRenderer {

    public ic_svg_03(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 455.731f;
        final float scaleY = h / 455.731f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(0.0f, 0.0f);
        mPath.rLineTo(455.731f, 0f);
        mPath.rLineTo(0f, 455.731f);
        mPath.rLineTo(-455.731f, 0f);
        mPath.close();
        mPath.moveTo(0.0f, 0.0f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-15356699, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(379.742f, 257.242f);
        mPath.rCubicTo(1.77f, -9.097f, 2.708f, -18.492f, 2.708f, -28.107f);
        mPath.rCubicTo(0.0f, -80.82f, -65.518f, -146.338f, -146.338f, -146.338f);
        mPath.rCubicTo(-9.615f, 0.0f, -19.01f, 0.938f, -28.107f, 2.708f);
        mPath.rCubicTo(-12.507f, -7.319f, -27.052f, -11.532f, -42.589f, -11.532f);
        mPath.rCubicTo(-46.65f, 0.0f, -84.467f, 37.817f, -84.467f, 84.467f);
        mPath.rCubicTo(0.0f, 15.537f, 4.214f, 30.082f, 11.532f, 42.588f);
        mPath.rCubicTo(-1.77f, 9.097f, -2.708f, 18.492f, -2.708f, 28.107f);
        mPath.rCubicTo(0.0f, 80.82f, 65.518f, 146.338f, 146.338f, 146.338f);
        mPath.rCubicTo(9.615f, 0.0f, 19.01f, -0.938f, 28.107f, -2.708f);
        mPath.rCubicTo(12.507f, 7.319f, 27.052f, 11.532f, 42.588f, 11.532f);
        mPath.rCubicTo(46.65f, 0.0f, 84.467f, -37.817f, 84.467f, -84.467f);
        mPath.cubicTo(391.275f, 284.293f, 387.061f, 269.749f, 379.742f, 257.242f);
        mPath.close();
        mPath.moveTo(379.742f, 257.242f);
        mPath.moveTo(238.892f, 329.634f);
        mPath.rCubicTo(-52.0f, 0.0f, -78.0f, -19.5f, -86.0f, -44.0f);
        mPath.rCubicTo(-8.0f, -24.5f, 9.5f, -31.5f, 15.0f, -32.0f);
        mPath.rCubicTo(5.5f, -0.5f, 17.167f, 0.833f, 20.5f, 11.0f);
        mPath.rCubicTo(3.465f, 10.567f, 15.0f, 31.5f, 40.0f, 34.0f);
        mPath.rCubicTo(25.0f, 2.5f, 41.5f, -9.0f, 46.5f, -21.0f);
        mPath.rCubicTo(5.0f, -12.0f, -4.0f, -28.5f, -42.5f, -34.0f);
        mPath.rCubicTo(-38.5f, -5.5f, -78.5f, -22.5f, -78.5f, -61.0f);
        mPath.rCubicTo(0.0f, -38.5f, 44.0f, -54.0f, 86.0f, -54.0f);
        mPath.rCubicTo(42.0f, 0.0f, 63.293f, 23.721f, 68.0f, 33.0f);
        mPath.rCubicTo(5.833f, 11.5f, 3.833f, 30.661f, -10.0f, 34.0f);
        mPath.rCubicTo(-14.5f, 3.5f, -22.0f, -4.5f, -32.5f, -24.0f);
        mPath.rCubicTo(-10.858f, -20.165f, -49.5f, -15.0f, -62.5f, -3.5f);
        mPath.rCubicTo(-13.0f, 11.5f, -9.5f, 28.0f, 44.5f, 38.5f);
        mPath.rCubicTo(54.0f, 10.5f, 74.0f, 30.0f, 74.0f, 60.5f);
        mPath.cubicTo(321.392f, 297.634f, 290.892f, 329.634f, 238.892f, 329.634f);
        mPath.close();
        mPath.moveTo(238.892f, 329.634f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        mFillPaint.setColor(applyAlpha(-1, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}