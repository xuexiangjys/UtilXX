package com.github.megatronking.svg.sample.drawables;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Paint;

import com.github.megatronking.svg.support.SVGRenderer;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.
 */
public class ic_svg_05 extends SVGRenderer {

    public ic_svg_05(Context context) {
        super(context);
        mAlpha = 1.0f;
        mWidth = dip2px(48.0f);
        mHeight = dip2px(48.0f);
    }

    @Override
    public void render(Canvas canvas, int w, int h, ColorFilter filter) {
        
        final float scaleX = w / 455.73f;
        final float scaleY = h / 455.73f;
        
        mPath.reset();
        mRenderPath.reset();
        
        mFinalPathMatrix.setValues(new float[]{1.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f});
        mFinalPathMatrix.postScale(scaleX, scaleY);
        
        mPath.moveTo(0.0f, 0.0f);
        mPath.rLineTo(0f, 455.73f);
        mPath.rLineTo(455.73f, 0f);
        mPath.lineTo(455.73f, 0.0f);
        mPath.lineTo(0.0f, 0.0f);
        mPath.close();
        mPath.moveTo(0.0f, 0.0f);
        mPath.moveTo(265.67f, 247.037f);
        mPath.rCubicTo(-7.793f, 51.194f, -45.961f, 80.543f, -95.376f, 80.543f);
        mPath.rCubicTo(-55.531f, 0.0f, -100.552f, -45.021f, -100.552f, -100.552f);
        mPath.rCubicTo(0.0f, -55.517f, 45.021f, -100.538f, 100.552f, -100.538f);
        mPath.rCubicTo(26.862f, 0.0f, 50.399f, 9.586f, 67.531f, 26.226f);
        mPath.rLineTo(-28.857f, 28.857f);
        mPath.rCubicTo(-9.773f, -9.846f, -23.147f, -15.094f, -38.674f, -15.094f);
        mPath.rCubicTo(-32.688f, 0.0f, -59.189f, 27.874f, -59.189f, 60.548f);
        mPath.rCubicTo(0.0f, 32.703f, 26.501f, 59.768f, 59.189f, 59.768f);
        mPath.rCubicTo(27.397f, 0.0f, 48.144f, -13.243f, 54.129f, -39.758f);
        mPath.rLineTo(-54.129f, 0f);
        mPath.rLineTo(0f, -40.38f);
        mPath.rLineTo(95.131f, 0f);
        mPath.rCubicTo(1.142f, 6.506f, 1.72f, 13.315f, 1.72f, 20.37f);
        mPath.cubicTo(267.144f, 234.025f, 266.638f, 240.69f, 265.67f, 247.037f);
        mPath.close();
        mPath.moveTo(265.67f, 247.037f);
        mPath.moveTo(386.419f, 234.517f);
        mPath.rLineTo(-35.233f, 0f);
        mPath.rLineTo(0f, 35.218f);
        mPath.lineTo(326.16f, 269.735f);
        mPath.rLineTo(0f, -35.218f);
        mPath.rLineTo(-35.233f, 0f);
        mPath.rLineTo(0f, -25.041f);
        mPath.rLineTo(35.233f, 0f);
        mPath.rLineTo(0f, -35.233f);
        mPath.rLineTo(25.026f, 0f);
        mPath.rLineTo(0f, 35.233f);
        mPath.rLineTo(35.233f, 0f);
        mPath.lineTo(386.419f, 234.517f);
        mPath.close();
        mPath.moveTo(386.419f, 234.517f);
        
        mRenderPath.addPath(mPath, mFinalPathMatrix);
        if (mFillPaint == null) {
            mFillPaint = new Paint();
            mFillPaint.setStyle(Paint.Style.FILL);
            mFillPaint.setAntiAlias(true);
        }
        mFillPaint.setColor(applyAlpha(-2274503, 1.0f));
        mFillPaint.setColorFilter(filter);
        canvas.drawPath(mRenderPath, mFillPaint);

    }

}